@page "/char-sheet"

<h1>CharSheet</h1>

<div class="container">
    <div class="row justify-content-between">
        
        @* Attributes *@
        <div class="col-xs-12 col-xl-6">
            <div class="row">
                <h2>Attributes</h2>
            </div>
            <div class="row">
                <div class="col-2">Name</div>
                <div class="col-2">Base</div>
                <div class="col-2">Total</div>
                <div class="col-6">Metatype</div>
            </div>
            @foreach (var stat in Attributes)
            {
                <div class="row">
                    <div class="col-2">@stat.Name</div>
                    <div class="col-2">@stat.Base</div>
                    <div class="col-2"><strong>@stat.Total</strong></div>
                    <div class="col-6">@stat.Min / @stat.Max (@stat.Aug)</div>
                </div>
            }
        </div>

        @* Damage Tracks *@
        <div class="col-xs-6 col-xl-3">
            <div class="row">
                <h3>Physical Track</h3>
            </div>

            <div id="physical-track" class="row track-utils offset-xl-1">
            @for (int i = 1; i <= DamageTrackPhysical.Boxes + DamageTrackPhysical.Overflow + 1; i++)
            {
                var j = i;

                @* Wound *@
                if (i <= DamageTrackPhysical.Boxes)
                {
                    if (i % 3 == 0)
                    {
                        <span class="track border border-warning">wound -@(i / 3)</span>
                    }
                    else
                    {
                        <span class="track border border-warning">box</span>
                    }
                }

                @* Overflow *@
                if (i > DamageTrackPhysical.Boxes)
                {
                    <span class="track track-overflow border border-warning">OF</span>
                }

                if (i == DamageTrackPhysical.Boxes + DamageTrackPhysical.Overflow + 1)
                {
                    <span class="track track-overflow border border-warning">
                        <div class="row h-100 justify-content-center align-items-center">
                            <img src="icons/ded.png" />
                        </div>
                    </span>
                }

                @* Line Break on every third box *@
                if (i % 3 == 0)
                {
                    <div class="w-100"></div>
                }
            }
            </div>
        </div>

        <div class="col-xs-6 col-xl-3">
            <div class="row">
                <h3>Stun Track</h3>
            </div>

            <div id="stun-track" class="row track-utils offset-xl-1">
            @for (int i = 1; i <= DamageTrackStun.Boxes + DamageTrackStun.Overflow + 1; i++)
            {
                var j = i;

                @* Wound *@
                if (i <= DamageTrackStun.Boxes)
                {
                    if (i % 3 == 0)
                    {
                        <input type="checkbox" class="btn-check" id="btncheck@(i)" autocomplete="off">
                        <label class="track border border-warning" for="btncheck@(i)">Wound @i</label>
                    }
                    else
                    {
                        <input type="checkbox" class="btn-check" id="btncheck@(i)" autocomplete="off">
                        <label class="track border border-warning" for="btncheck@(i)">Checkbox @i</label>
                    }
                }

                @* Overflow *@
                if (i == DamageTrackStun.Boxes + DamageTrackStun.Overflow + 1)
                {
                    <input type="checkbox" class="btn-check" id="btncheck@(i)" autocomplete="off">
                    <label class="track track-overflow border border-warning" for="btncheck@(i)">
                        <div class="row h-100 justify-content-center align-items-center">
                            <img src="icons/ded.png" />
                        </div>
                    </label>
                }
                else if (i > DamageTrackStun.Boxes)
                {
                    <input type="checkbox" class="btn-check" id="btncheck@(i)" autocomplete="off">
                    <label class="track track-overflow border border-warning" for="btncheck@(i)">Checkbox @i</label>
                }

                @* Line Break on every third box *@
                if (i % 3 == 0)
                {
                    <div class="w-100"></div>
                }
            }
            </div>
        </div>

        @* Test Button Group *@
        <div class="btn-group" role="group" aria-label="Basic checkbox toggle button group">
            <input type="checkbox" class="btn-check" id="btncheck1" autocomplete="off">
            <label class="btn btn-outline-primary" for="btncheck1">Checkbox 1</label>

            <input type="checkbox" class="btn-check" id="btncheck2" autocomplete="off">
            <label class="btn btn-outline-primary" for="btncheck2">Checkbox 2</label>

            <input type="checkbox" class="btn-check" id="btncheck3" autocomplete="off">
            <label class="btn btn-outline-primary" for="btncheck3">Checkbox 3</label>
        </div>

        @* Important *@
        @* TODO: make this a list so that user can add what they want to the list *@
        <div class="col-xs-12 col-xl-6">
            <div class="row">
                <h2>Important</h2>
            </div>
            <div class="row justify-content-between">
                <div class="col">Initiative</div>
                <div class="col .ml-auto">@Initiative</div>
            </div>
            <div class="row justify-content-between">
                <div class="col">Armor</div>
                <div class="col .ml-auto">@Armor</div>
            </div>
            <div class="row justify-content-between">
                <div class="col">Defense</div>
                <div class="col .ml-auto">@DefenseTest</div>
            </div>
            <div class="row justify-content-between">
                <div class="col">Full Defense</div>
                <div class="col .ml-auto">@FullDefenseTest</div>
            </div>
        </div>

        @* Current Effects *@
        <div class="col-xs-12 col-xl-6">
            <div class="row">
                <h2>Current Effects</h2>
            </div>
            <div class="row justify-content-between">
                <div class="col-5">Name</div>
                <div class="col-4">Value Affected</div>
                <div class="col-3">Rating</div>
            </div>
            @foreach (var effect in CurrentEffects)
            {
                <div class="row justify-content-between">
                    <div class="col-5">@effect.Name</div>
                    <div class="col-4">@effect.ValueToAffect</div>
                    <div class="col-3">@effect.Rating</div>
                </div>
            }
        </div>
    </div>
</div>